rm(list=setdiff(ls(), c("fishing", "fishing.PNMCA", "fishing.Stareso", "Meta.survey", "survey", "%notin%", "df.msa", "df.mod", "df.mod.short", "multinom_model.short.red", "df.mod.large", "multinom_model.large.red", "results_df", "results_df.1", "results_df.2")))
df.fsh <- fishing[, c("a", "nom_scien", "nb_ind", "tail_cm", "poids_g")]
unique(df.fsh$nom_scien)
df.fsh %>% filter(nom_scien %notin% c("0", "NA")) -> df.fsh
sum(df.fsh$poids_g, na.rm = TRUE)
sum(df.fsh$nb_ind, na.rm = TRUE)
plot.bar.fsh <- function(title.) {
df_sum <- df.fsh.red %>%
group_by(nom_scien) %>%
summarise(total_poids_g = round(sum(poids_g, na.rm = TRUE), digits = 0),
perc_poids_g = round((sum(poids_g, na.rm = TRUE)/(sum(df.fsh$poids_g, na.rm = TRUE)))*100, digits = 2),
.groups = 'drop')
ggplot(df_sum, aes(x = reorder(nom_scien, perc_poids_g), y = log10(perc_poids_g+1), group = 1)) +
geom_point(colour = 'mediumblue') +
geom_segment(aes(xend=nom_scien), yend=0, colour = 'mediumblue') +
scale_y_continuous(expand = c(0, 0)) +
geom_text(aes(label = total_poids_g, y = log10(perc_poids_g+1)+0.05), hjust = 1.1, color = "black", size = 2.5) +
#facet_wrap(~variable, scales = "free_y") +
labs(x = "Species", y = expression(Log[10](biomasse~pêchée~+~1))) +
ggtitle(paste0(title., " (somme = ", sum(df_sum$total_poids_g)," g)")) +
#theme_minimal() +
#theme(axis.text.x = element_text(angle = 0, hjust = 1)) +
coord_flip() +
theme(panel.background=element_blank(), axis.line = element_line(), axis.ticks.y =element_blank())
}
df.fsh %>% filter(a %in% c("2020", "2021", "2022", "2023") & poids_g != 0) -> df.fsh.red
plot.bar.fsh(title. = "Biomasse pêchée en 2020-2023")
ggsave("Figs/Biomasse/biomasse_2020-2023.png", width = 7, height = 7)
df.fsh %>% filter(a %in% c("2020", "2021", "2022") & poids_g != 0) -> df.fsh.red
plot.bar.fsh(title. = "Biomasse pêchée en 2020-2022")
ggsave("Figs/Biomasse/biomasse_2020-2022.png", width = 7, height = 7)
df.fsh %>% filter(a %in% c("2023") & poids_g != 0) -> df.fsh.red
plot.bar.fsh(title. = "Biomasse pêchée en 2023")
ggsave("Figs/Biomasse/biomasse_2023.png", width = 7, height = 7)
plot.bar.fsh <- function(title.) {
df_sum <- df.fsh.red %>%
group_by(nom_scien) %>%
summarise(total_nb_ind = sum(nb_ind, na.rm = TRUE),
perc_nb_ind = (sum(nb_ind, na.rm = TRUE)/(sum(df.fsh$nb_ind, na.rm = TRUE)))*100,
.groups = 'drop')
ggplot(df_sum, aes(x = reorder(nom_scien, perc_nb_ind), y = log10(perc_nb_ind+1), group = 1)) +
geom_point(colour = 'mediumblue') +
geom_segment(aes(xend=nom_scien), yend=0, colour = 'mediumblue') +
scale_y_continuous(expand = c(0, 0)) +
geom_text(aes(label = total_nb_ind, y = log10(perc_nb_ind+1)+0.05), hjust = 1.1, color = "black", size = 2.5) +
#facet_wrap(~variable, scales = "free_y") +
labs(x = "Species", y = expression(Log[10](percentage~of~individuals~+~1))) +
ggtitle(paste0(title., " (N=", sum(df_sum$total_nb_ind),")")) +
#theme_minimal() +
#theme(axis.text.x = element_text(angle = 0, hjust = 1)) +
coord_flip() +
theme(panel.background=element_blank(), axis.line = element_line(), axis.ticks.y =element_blank())
}
df.fsh %>% filter(a %in% c("2020", "2021", "2022", "2023")) -> df.fsh.red
plot.bar.fsh(title. = "Individus pêchés en 2020-2023")
df.fsh %>% filter(a %in% c("2020", "2021", "2022", "2023")) -> df.fsh.red
plot.bar.fsh(title. = "Individus pêchés en 2020-2023")
ggsave("Figs/Individu/individu_2020-2023.png", width = 7, height = 7)
df.fsh %>% filter(a %in% c("2020", "2021", "2022")) -> df.fsh.red
plot.bar.fsh(title. = "Individus pêchés en 2020-2022")
ggsave("Figs/Individu/individu_2020-2022.png", width = 7, height = 7)
df.fsh %>% filter(a %in% c("2023")) -> df.fsh.red
plot.bar.fsh(title. = "Individus pêchés en 2023")
ggsave("Figs/Individu/individu_2023.png", width = 7, height = 7)
rm(list=setdiff(ls(), c("fishing", "fishing.PNMCA", "fishing.Stareso", "Meta.survey", "survey", "%notin%", "df.msa", "df.mod", "df.mod.short", "multinom_model.short.red", "df.mod.large", "multinom_model.large.red", "results_df", "results_df.1", "results_df.2")))
df.fsh <- fishing[, c("a", "nom_scien", "nb_ind", "tail_cm", "poids_g")]
unique(df.fsh$nom_scien)
df.fsh %>% filter(nom_scien %notin% c("0", "NA")) -> df.fsh
unique(df.fsh$nom_scien)
df.fsh %>% filter(a %in% c("2020", "2021", "2022", "2023")) -> df.fsh.red
df_sum <- df.fsh.red %>%
group_by(nom_scien) %>%
summarise(total_nb_ind = sum(nb_ind, na.rm = TRUE),
perc_nb_ind = (sum(nb_ind, na.rm = TRUE)/(sum(df.fsh.red$nb_ind, na.rm = TRUE)))*100,
.groups = 'drop')
df_sum <-df_sum[order(df_sum$total_nb_ind, decreasing = T),]
df.fsh %>% filter(a %in% c("2020", "2021", "2022")) -> df.fsh.red.1
df_sum.1 <- df.fsh.red.1 %>%
group_by(nom_scien) %>%
summarise(total_nb_ind = sum(nb_ind, na.rm = TRUE),
perc_nb_ind = (sum(nb_ind, na.rm = TRUE)/(sum(df.fsh.red.1$nb_ind, na.rm = TRUE)))*100,
.groups = 'drop')
df_sum.1 <-df_sum.1[order(df_sum.1$total_nb_ind, decreasing = T),]
df.fsh %>% filter(a %in% c("2023")) -> df.fsh.red.2
df_sum.2 <- df.fsh.red.2 %>%
group_by(nom_scien) %>%
summarise(total_nb_ind = sum(nb_ind, na.rm = TRUE),
perc_nb_ind = (sum(nb_ind, na.rm = TRUE)/(sum(df.fsh.red.2$nb_ind, na.rm = TRUE)))*100,
.groups = 'drop')
df_sum.2 <-df_sum.2[order(df_sum.2$total_nb_ind, decreasing = T),]
sort(df_sum$nom_scien[1:6])
sort(df_sum.1$nom_scien[1:6])
sort(df_sum.2$nom_scien[1:6])
sunique(sort(c(df_sum$nom_scien[1:6], df_sum.1$nom_scien[1:6])))
sunique(sort(c(sp., df_sum.2$nom_scien[1:6])))
unique(sort(c(df_sum$nom_scien[1:6], df_sum.1$nom_scien[1:6])))
unique(sort(c(sp., df_sum.2$nom_scien[1:6])))
(sort(sp.))
df.fsh <- fishing[, c("a", "nom_scien", "nb_ind", "tail_cm", "poids_g")]
unique(df.fsh$nom_scien)
df.fsh %>% filter(nom_scien %notin% c("0", "NA")) -> df.fsh
unique(df.fsh$nom_scien)
df.fsh %>% filter(a %in% c("2020", "2021", "2022", "2023")) -> df.fsh.red
df_sum <- df.fsh.red %>%
group_by(nom_scien) %>%
summarise(total_nb_ind = sum(nb_ind, na.rm = TRUE),
perc_nb_ind = (sum(nb_ind, na.rm = TRUE)/(sum(df.fsh.red$nb_ind, na.rm = TRUE)))*100,
.groups = 'drop')
df_sum <-df_sum[order(df_sum$total_nb_ind, decreasing = T),]
df.fsh %>% filter(a %in% c("2020", "2021", "2022")) -> df.fsh.red.1
df_sum.1 <- df.fsh.red.1 %>%
group_by(nom_scien) %>%
summarise(total_nb_ind = sum(nb_ind, na.rm = TRUE),
perc_nb_ind = (sum(nb_ind, na.rm = TRUE)/(sum(df.fsh.red.1$nb_ind, na.rm = TRUE)))*100,
.groups = 'drop')
df_sum.1 <-df_sum.1[order(df_sum.1$total_nb_ind, decreasing = T),]
df.fsh %>% filter(a %in% c("2023")) -> df.fsh.red.2
df_sum.2 <- df.fsh.red.2 %>%
group_by(nom_scien) %>%
summarise(total_nb_ind = sum(nb_ind, na.rm = TRUE),
perc_nb_ind = (sum(nb_ind, na.rm = TRUE)/(sum(df.fsh.red.2$nb_ind, na.rm = TRUE)))*100,
.groups = 'drop')
df_sum.2 <-df_sum.2[order(df_sum.2$total_nb_ind, decreasing = T),]
df.fsh <- fishing[, c("a", "nom_scien", "nb_ind", "tail_cm", "poids_g")]
unique(df.fsh$nom_scien)
df.fsh %>% filter(nom_scien %notin% c("0", "NA")) -> df.fsh
unique(df.fsh$nom_scien)
df.fsh %>% filter(a %in% c("2020", "2021", "2022", "2023")) -> df.fsh.red
df_sum <- df.fsh.red %>%
group_by(nom_scien) %>%
summarise(total_nb_ind = sum(nb_ind, na.rm = TRUE),
perc_nb_ind = (sum(nb_ind, na.rm = TRUE)/(sum(df.fsh.red$nb_ind, na.rm = TRUE)))*100,
.groups = 'drop')
df_sum <-df_sum[order(df_sum$total_nb_ind, decreasing = T),]
df.fsh %>% filter(a %in% c("2020", "2021", "2022")) -> df.fsh.red.1
df_sum.1 <- df.fsh.red.1 %>%
group_by(nom_scien) %>%
summarise(total_nb_ind = sum(nb_ind, na.rm = TRUE),
perc_nb_ind = (sum(nb_ind, na.rm = TRUE)/(sum(df.fsh.red.1$nb_ind, na.rm = TRUE)))*100,
.groups = 'drop')
df_sum.1 <-df_sum.1[order(df_sum.1$total_nb_ind, decreasing = T),]
df.fsh %>% filter(a %in% c("2023")) -> df.fsh.red.2
df_sum.2 <- df.fsh.red.2 %>%
group_by(nom_scien) %>%
summarise(total_nb_ind = sum(nb_ind, na.rm = TRUE),
perc_nb_ind = (sum(nb_ind, na.rm = TRUE)/(sum(df.fsh.red.2$nb_ind, na.rm = TRUE)))*100,
.groups = 'drop')
df_sum.2 <-df_sum.2[order(df_sum.2$total_nb_ind, decreasing = T),]
sort(df_sum$nom_scien[1:6])
sort(df_sum.1$nom_scien[1:6])
sort(df_sum.2$nom_scien[1:6])
sp. <- unique(sort(c(df_sum$nom_scien[1:6], df_sum.1$nom_scien[1:6])))
sp. <- unique(sort(c(sp., df_sum.2$nom_scien[1:6])))
(sort(sp.))
size.at.maturity <- data.frame(species = sp.,
size.mat = c(18, #"Coris julis", Michel
12, #"Diplodus annularis", Michel (7, Lovina)
6,  #"Diplodus sargus", Lovina "Listing medfish characteristics Dimarchopoulou et al. 2016.xlsx"
round((17.6+15.3)/2,0), #"Loligo sp", "The ML 50% of females was estimated to be 17.6 cm. The ML 50% of males was estimated to be 15.3 cm." Moreno et al., Aquat. Living Resour. 18, 377–384 (2005), Environmental influences on age and size at maturity of Loligo vulgaris
10, #"Pagellus erythrinus", Michel (9, Lovina)
4, #"Serranus cabrilla", Lovina "Listing medfish characteristics Dimarchopoulou et al. 2016.xlsx"
16, #"Serranus scriba", Michel
19 #"Spondyliosoma cantharus", Michel
))
size.sfunction(df.fsh., df., years.) {
size.sfunction(df.fsh., df., years.) {
size.sp.(df.fsh. = df.fsh.red, df. = df_sum, years. = "2020-2023")
size.sp.function(df.fsh., df., years.) {
size.sp.(df.fsh. = df.fsh.red, df. = df_sum, years. = "2020-2023")
size.sp. <- function(df.fsh., df., years.) {
#df.fsh.=df.fsh.red.1
#df.=df_sum.1
#years.="2020-2022"
for(i in c(1:6)) {
#i=1
df.i <- filter(df.fsh., nom_scien == sort(df.[1:6,"nom_scien"]$nom_scien)[i])
print(sunclass(unique(filter(df.fsh., nom_scien == sort(df.[1:6,"nom_scien"]$nom_scien)[i])["nom_scien"]))$nom_scien)
(sexsize=(filter(size.at.maturity,species==sp.))["size.mat"]$size.mat)
filter(df.fsh., nom_scien == sp.)
hist(unlist(filter(df.fsh., nom_scien == sp.)[,"tail_cm"]), xlab = "size (cm)", main = sp.)
(data <- df.i$tail_cm)
(border_value <- sexsize)
# Split data into two parts based on the border value
(data_left <- na.omit(data[data < border_value]))
(data_right <- na.omit(data[data >= border_value]))
# Determine the number of groups on each side
total_groups <- 5
(left_proportion <- (sexsize-min(data, na.rm = T))/(max(data, na.rm = T)-min(data, na.rm = T)))
(left_proportion <- ifelse(left_proportion < 0, 0, left_proportion))
(right_proportion <- (max(data, na.rm = T)-sexsize)/(max(data, na.rm = T)-min(data, na.rm = T)))
(right_proportion <- ifelse(right_proportion > 1, 1, right_proportion))
(left_groups <- round(left_proportion * total_groups))
(right_groups <- total_groups - left_groups)
# Define breaks for left side
(if (length(data_left) > 0) {
left_breaks <- seq(min(data_left), sexsize, length.out = left_groups + 1)
} else {
left_breaks <- NULL
})
# Define breaks for right side
(if (length(data_right) > 0) {
right_breaks <- seq(sexsize, max(data_right), length.out = right_groups + 1)
} else {
right_breaks <- NULL
})
# Combine breaks
(breaks <- unique(c(left_breaks, right_breaks)))
(breaks <- round(breaks))
s.cl <- breaks
(s.cl.range <- c(paste0("[",s.cl[1],"-",s.cl[2],"["), paste0("[",s.cl[2],"-",s.cl[3],"["), paste0("[",s.cl[3],"-",s.cl[4],"["),paste0("[",s.cl[4],"-",s.cl[5],"["), paste0("[",s.cl[5],"-",s.cl[6],"]")))
df.i$tail_cm_classe <- NA
df.i$tail_cm_classe <- ifelse(df.i$tail_cm < s.cl[2], paste0("[",s.cl[1],"-",s.cl[2],"["), df.i$tail_cm_classe)
df.i$tail_cm_classe <- ifelse(df.i$tail_cm < s.cl[3] & is.na(df.i$tail_cm_classe), paste0("[",s.cl[2],"-",s.cl[3],"["), df.i$tail_cm_classe)
df.i$tail_cm_classe <- ifelse(df.i$tail_cm < s.cl[4] & is.na(df.i$tail_cm_classe), paste0("[",s.cl[3],"-",s.cl[4],"["), df.i$tail_cm_classe)
df.i$tail_cm_classe <- ifelse(df.i$tail_cm < s.cl[5] & is.na(df.i$tail_cm_classe), paste0("[",s.cl[4],"-",s.cl[5],"["), df.i$tail_cm_classe)
df.i$tail_cm_classe <- ifelse(df.i$tail_cm <= s.cl[6] & is.na(df.i$tail_cm_classe), paste0("[",s.cl[5],"-",s.cl[6],"]"), df.i$tail_cm_classe)
df.i$tail_cm_classe <- as.factor(df.i$tail_cm_classe)
as.character(na.omit(unique(df.i$tail_cm_classe)))
setdiff(s.cl.range, as.character(na.omit(unique(df.i$tail_cm_classe))))
ifelse(length(setdiff(s.cl.range, as.character(na.omit(unique(df.i$tail_cm_classe))))) >=1, df.i <- add_row(df.i, tail_cm_classe = setdiff(s.cl.range, as.character(na.omit(unique(df.i$tail_cm_classe))))), df.i)
df.i$tail_cm_classe <- factor(df.i$tail_cm_classe, levels = c(paste0("[",s.cl[1],"-",s.cl[2],"["), paste0("[",s.cl[2],"-",s.cl[3],"["), paste0("[",s.cl[3],"-",s.cl[4],"["),paste0("[",s.cl[4],"-",s.cl[5],"["), paste0("[",s.cl[5],"-",s.cl[6],"]")))
levels(df.i$tail_cm_classe)
#df.i <- na.omit(df.i[,c("tail_cm", "tail_cm_classe")])
#levels(df.i$tail_cm_classe)
df.i$tail_cm_classe.num <- NA
df.i$tail_cm_classe.num <- ifelse(df.i$tail_cm_classe == paste0("[",s.cl[1],"-",s.cl[2],"["), 1, df.i$tail_cm_classe.num)
df.i$tail_cm_classe.num <- ifelse(df.i$tail_cm_classe == paste0("[",s.cl[2],"-",s.cl[3],"["), 2, df.i$tail_cm_classe.num)
df.i$tail_cm_classe.num <- ifelse(df.i$tail_cm_classe == paste0("[",s.cl[3],"-",s.cl[4],"["), 3, df.i$tail_cm_classe.num)
df.i$tail_cm_classe.num <- ifelse(df.i$tail_cm_classe == paste0("[",s.cl[4],"-",s.cl[5],"["), 4, df.i$tail_cm_classe.num)
df.i$tail_cm_classe.num <- ifelse(df.i$tail_cm_classe == paste0("[",s.cl[5],"-",s.cl[6],"]"), 5, df.i$tail_cm_classe.num)
df.i$tail_cm_classe.num <- as.integer(df.i$tail_cm_classe.num)
(df.i$tail_cm_classe.num)
(txt. <- paste0("[",sexsize,"-"))
(threshold_category <- unlist(unique((df.i[grep(paste0("\\",txt.), df.i$tail_cm_classe), ])$tail_cm_classe.num)))
df.i$mature <- NA
df.i$mature <- ifelse(df.i$tail_cm_classe.num < threshold_category, "non", "oui")
df.i$mature <- as.factor(df.i$mature)
df.i.narm <- na.omit(df.i[, c("tail_cm", "tail_cm_classe", "tail_cm_classe.num", "mature")])
print(table(df.i.narm[, c("tail_cm_classe", "tail_cm_classe.num", "mature")]))
df.i.narm %>% group_by(tail_cm_classe, mature) %>% summarise(n())
barplot.i <- ggplot(df.i.narm, aes(x = tail_cm_classe, fill = mature)) +
geom_bar() +
scale_x_discrete(drop=FALSE) +
scale_fill_manual(values = c("non" = "orange", "oui" = "lightblue")) +
labs(title = paste0(unique(df.i$nom_scien), " (N = ", nrow(df.i.narm), ", ", years., ")"),
x = "Taille (cm)",
y = "Nombre d'individus",
fill = "Mature") +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) +
scale_y_continuous(expand = c(0,0))
barplot.i <- barplot.i + ggtitle(bquote(italic(.(unique(df.i$nom_scien)))~.(years.)~"(N ="~.(nrow(df.i.narm))*")"))
print(barplot.i)
ggsave(paste0("Figs/Sc_nb_sp/", unique(na.omit(df.i$nom_scien)), "_", years.,"_barplot.png"), barplot.i, width = 5, height = 4)
}
}
size.sp.(df.fsh. = df.fsh.red, df. = df_sum, years. = "2020-2023")
i=1
df.fsh.=df.fsh.red.1
df.=df_sum.1
years.="2020-2022"
i=1
df.i <- filter(df.fsh., nom_scien == sort(df.[1:6,"nom_scien"]$nom_scien)[i])
print(sp. <- unclass(unique(filter(df.fsh., nom_scien == sort(df.[1:6,"nom_scien"]$nom_scien)[i])["nom_scien"]))$nom_scien)
(sexsize=(filter(size.at.maturity,species==sp.))["size.mat"]$size.mat)
filter(df.fsh., nom_scien == sp.)
hist(unlist(filter(df.fsh., nom_scien == sp.)[,"tail_cm"]), xlab = "size (cm)", main = sp.)
(data <- df.i$tail_cm)
(border_value <- sexsize)
# Split data into two parts based on the border value
(data_left <- na.omit(data[data < border_value]))
(data_right <- na.omit(data[data >= border_value]))
# Determine the number of groups on each side
total_groups <- 5
(left_proportion <- (sexsize-min(data, na.rm = T))/(max(data, na.rm = T)-min(data, na.rm = T)))
(left_proportion <- ifelse(left_proportion < 0, 0, left_proportion))
(right_proportion <- (max(data, na.rm = T)-sexsize)/(max(data, na.rm = T)-min(data, na.rm = T)))
(right_proportion <- ifelse(right_proportion > 1, 1, right_proportion))
(left_groups <- round(left_proportion * total_groups))
(right_groups <- total_groups - left_groups)
# Define breaks for left side
(if (length(data_left) > 0) {
left_breaks <- seq(min(data_left), sexsize, length.out = left_groups + 1)
} else {
left_breaks <- NULL
})
# Define breaks for right side
(if (length(data_right) > 0) {
right_breaks <- seq(sexsize, max(data_right), length.out = right_groups + 1)
} else {
right_breaks <- NULL
})
# Combine breaks
(breaks <- unique(c(left_breaks, right_breaks)))
(breaks <- round(breaks))
s.cl <- breaks
(s.cl.range <- c(paste0("[",s.cl[1],"-",s.cl[2],"["), paste0("[",s.cl[2],"-",s.cl[3],"["), paste0("[",s.cl[3],"-",s.cl[4],"["),paste0("[",s.cl[4],"-",s.cl[5],"["), paste0("[",s.cl[5],"-",s.cl[6],"]")))
df.i$tail_cm_classe <- NA
df.i$tail_cm_classe <- ifelse(df.i$tail_cm < s.cl[2], paste0("[",s.cl[1],"-",s.cl[2],"["), df.i$tail_cm_classe)
df.i$tail_cm_classe <- ifelse(df.i$tail_cm < s.cl[3] & is.na(df.i$tail_cm_classe), paste0("[",s.cl[2],"-",s.cl[3],"["), df.i$tail_cm_classe)
df.i$tail_cm_classe <- ifelse(df.i$tail_cm < s.cl[4] & is.na(df.i$tail_cm_classe), paste0("[",s.cl[3],"-",s.cl[4],"["), df.i$tail_cm_classe)
df.i$tail_cm_classe <- ifelse(df.i$tail_cm < s.cl[5] & is.na(df.i$tail_cm_classe), paste0("[",s.cl[4],"-",s.cl[5],"["), df.i$tail_cm_classe)
df.i$tail_cm_classe <- ifelse(df.i$tail_cm <= s.cl[6] & is.na(df.i$tail_cm_classe), paste0("[",s.cl[5],"-",s.cl[6],"]"), df.i$tail_cm_classe)
df.i$tail_cm_classe <- as.factor(df.i$tail_cm_classe)
as.character(na.omit(unique(df.i$tail_cm_classe)))
setdiff(s.cl.range, as.character(na.omit(unique(df.i$tail_cm_classe))))
ifelse(length(setdiff(s.cl.range, as.character(na.omit(unique(df.i$tail_cm_classe))))) >=1, df.i <- add_row(df.i, tail_cm_classe = setdiff(s.cl.range, as.character(na.omit(unique(df.i$tail_cm_classe))))), df.i)
df.i$tail_cm_classe <- factor(df.i$tail_cm_classe, levels = c(paste0("[",s.cl[1],"-",s.cl[2],"["), paste0("[",s.cl[2],"-",s.cl[3],"["), paste0("[",s.cl[3],"-",s.cl[4],"["),paste0("[",s.cl[4],"-",s.cl[5],"["), paste0("[",s.cl[5],"-",s.cl[6],"]")))
levels(df.i$tail_cm_classe)
#df.i <- na.omit(df.i[,c("tail_cm", "tail_cm_classe")])
#levels(df.i$tail_cm_classe)
df.i$tail_cm_classe.num <- NA
df.i$tail_cm_classe.num <- ifelse(df.i$tail_cm_classe == paste0("[",s.cl[1],"-",s.cl[2],"["), 1, df.i$tail_cm_classe.num)
df.i$tail_cm_classe.num <- ifelse(df.i$tail_cm_classe == paste0("[",s.cl[2],"-",s.cl[3],"["), 2, df.i$tail_cm_classe.num)
df.i$tail_cm_classe.num <- ifelse(df.i$tail_cm_classe == paste0("[",s.cl[3],"-",s.cl[4],"["), 3, df.i$tail_cm_classe.num)
df.i$tail_cm_classe.num <- ifelse(df.i$tail_cm_classe == paste0("[",s.cl[4],"-",s.cl[5],"["), 4, df.i$tail_cm_classe.num)
df.i$tail_cm_classe.num <- ifelse(df.i$tail_cm_classe == paste0("[",s.cl[5],"-",s.cl[6],"]"), 5, df.i$tail_cm_classe.num)
df.i$tail_cm_classe.num <- as.integer(df.i$tail_cm_classe.num)
(df.i$tail_cm_classe.num)
(txt. <- paste0("[",sexsize,"-"))
(threshold_category <- unlist(unique((df.i[grep(paste0("\\",txt.), df.i$tail_cm_classe), ])$tail_cm_classe.num)))
df.i$mature <- NA
df.i$mature <- ifelse(df.i$tail_cm_classe.num < threshold_category, "non", "oui")
df.i$mature <- as.factor(df.i$mature)
df.i.narm <- na.omit(df.i[, c("tail_cm", "tail_cm_classe", "tail_cm_classe.num", "mature")])
print(table(df.i.narm[, c("tail_cm_classe", "tail_cm_classe.num", "mature")]))
df.i.narm %>% group_by(tail_cm_classe, mature) %>% summarise(n())
barplot.i <- ggplot(df.i.narm, aes(x = tail_cm_classe, fill = mature)) +
geom_bar() +
scale_x_discrete(drop=FALSE) +
scale_fill_manual(values = c("non" = "orange", "oui" = "lightblue")) +
labs(title = paste0(unique(df.i$nom_scien), " (N = ", nrow(df.i.narm), ", ", years., ")"),
x = "Taille (cm)",
y = "Nombre d'individus",
fill = "Mature") +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) +
scale_y_continuous(expand = c(0,0))
barplot.i <- barplot.i + ggtitle(bquote(italic(.(unique(df.i$nom_scien)))~.(years.)~"(N ="~.(nrow(df.i.narm))*")"))
print(barplot.i)
ggsave(paste0("Figs/Sc_nb_sp/", unique(na.omit(df.i$nom_scien)), "_", years.,"_barplot.png"), barplot.i, width = 5, height = 4)
size.sp. <- function(df.fsh., df., years.) {
#df.fsh.=df.fsh.red.1
#df.=df_sum.1
#years.="2020-2022"
for(i in c(1:6)) {
#i=1
df.i <- filter(df.fsh., nom_scien == sort(df.[1:6,"nom_scien"]$nom_scien)[i])
print(sp. <- unclass(unique(filter(df.fsh., nom_scien == sort(df.[1:6,"nom_scien"]$nom_scien)[i])["nom_scien"]))$nom_scien)
(sexsize=(filter(size.at.maturity,species==sp.))["size.mat"]$size.mat)
filter(df.fsh., nom_scien == sp.)
hist(unlist(filter(df.fsh., nom_scien == sp.)[,"tail_cm"]), xlab = "size (cm)", main = sp.)
(data <- df.i$tail_cm)
(border_value <- sexsize)
# Split data into two parts based on the border value
(data_left <- na.omit(data[data < border_value]))
(data_right <- na.omit(data[data >= border_value]))
# Determine the number of groups on each side
total_groups <- 5
(left_proportion <- (sexsize-min(data, na.rm = T))/(max(data, na.rm = T)-min(data, na.rm = T)))
(left_proportion <- ifelse(left_proportion < 0, 0, left_proportion))
(right_proportion <- (max(data, na.rm = T)-sexsize)/(max(data, na.rm = T)-min(data, na.rm = T)))
(right_proportion <- ifelse(right_proportion > 1, 1, right_proportion))
(left_groups <- round(left_proportion * total_groups))
(right_groups <- total_groups - left_groups)
# Define breaks for left side
(if (length(data_left) > 0) {
left_breaks <- seq(min(data_left), sexsize, length.out = left_groups + 1)
} else {
left_breaks <- NULL
})
# Define breaks for right side
(if (length(data_right) > 0) {
right_breaks <- seq(sexsize, max(data_right), length.out = right_groups + 1)
} else {
right_breaks <- NULL
})
# Combine breaks
(breaks <- unique(c(left_breaks, right_breaks)))
(breaks <- round(breaks))
s.cl <- breaks
(s.cl.range <- c(paste0("[",s.cl[1],"-",s.cl[2],"["), paste0("[",s.cl[2],"-",s.cl[3],"["), paste0("[",s.cl[3],"-",s.cl[4],"["),paste0("[",s.cl[4],"-",s.cl[5],"["), paste0("[",s.cl[5],"-",s.cl[6],"]")))
df.i$tail_cm_classe <- NA
df.i$tail_cm_classe <- ifelse(df.i$tail_cm < s.cl[2], paste0("[",s.cl[1],"-",s.cl[2],"["), df.i$tail_cm_classe)
df.i$tail_cm_classe <- ifelse(df.i$tail_cm < s.cl[3] & is.na(df.i$tail_cm_classe), paste0("[",s.cl[2],"-",s.cl[3],"["), df.i$tail_cm_classe)
df.i$tail_cm_classe <- ifelse(df.i$tail_cm < s.cl[4] & is.na(df.i$tail_cm_classe), paste0("[",s.cl[3],"-",s.cl[4],"["), df.i$tail_cm_classe)
df.i$tail_cm_classe <- ifelse(df.i$tail_cm < s.cl[5] & is.na(df.i$tail_cm_classe), paste0("[",s.cl[4],"-",s.cl[5],"["), df.i$tail_cm_classe)
df.i$tail_cm_classe <- ifelse(df.i$tail_cm <= s.cl[6] & is.na(df.i$tail_cm_classe), paste0("[",s.cl[5],"-",s.cl[6],"]"), df.i$tail_cm_classe)
df.i$tail_cm_classe <- as.factor(df.i$tail_cm_classe)
as.character(na.omit(unique(df.i$tail_cm_classe)))
setdiff(s.cl.range, as.character(na.omit(unique(df.i$tail_cm_classe))))
ifelse(length(setdiff(s.cl.range, as.character(na.omit(unique(df.i$tail_cm_classe))))) >=1, df.i <- add_row(df.i, tail_cm_classe = setdiff(s.cl.range, as.character(na.omit(unique(df.i$tail_cm_classe))))), df.i)
df.i$tail_cm_classe <- factor(df.i$tail_cm_classe, levels = c(paste0("[",s.cl[1],"-",s.cl[2],"["), paste0("[",s.cl[2],"-",s.cl[3],"["), paste0("[",s.cl[3],"-",s.cl[4],"["),paste0("[",s.cl[4],"-",s.cl[5],"["), paste0("[",s.cl[5],"-",s.cl[6],"]")))
levels(df.i$tail_cm_classe)
#df.i <- na.omit(df.i[,c("tail_cm", "tail_cm_classe")])
#levels(df.i$tail_cm_classe)
df.i$tail_cm_classe.num <- NA
df.i$tail_cm_classe.num <- ifelse(df.i$tail_cm_classe == paste0("[",s.cl[1],"-",s.cl[2],"["), 1, df.i$tail_cm_classe.num)
df.i$tail_cm_classe.num <- ifelse(df.i$tail_cm_classe == paste0("[",s.cl[2],"-",s.cl[3],"["), 2, df.i$tail_cm_classe.num)
df.i$tail_cm_classe.num <- ifelse(df.i$tail_cm_classe == paste0("[",s.cl[3],"-",s.cl[4],"["), 3, df.i$tail_cm_classe.num)
df.i$tail_cm_classe.num <- ifelse(df.i$tail_cm_classe == paste0("[",s.cl[4],"-",s.cl[5],"["), 4, df.i$tail_cm_classe.num)
df.i$tail_cm_classe.num <- ifelse(df.i$tail_cm_classe == paste0("[",s.cl[5],"-",s.cl[6],"]"), 5, df.i$tail_cm_classe.num)
df.i$tail_cm_classe.num <- as.integer(df.i$tail_cm_classe.num)
(df.i$tail_cm_classe.num)
(txt. <- paste0("[",sexsize,"-"))
(threshold_category <- unlist(unique((df.i[grep(paste0("\\",txt.), df.i$tail_cm_classe), ])$tail_cm_classe.num)))
df.i$mature <- NA
df.i$mature <- ifelse(df.i$tail_cm_classe.num < threshold_category, "non", "oui")
df.i$mature <- as.factor(df.i$mature)
df.i.narm <- na.omit(df.i[, c("tail_cm", "tail_cm_classe", "tail_cm_classe.num", "mature")])
print(table(df.i.narm[, c("tail_cm_classe", "tail_cm_classe.num", "mature")]))
df.i.narm %>% group_by(tail_cm_classe, mature) %>% summarise(n())
barplot.i <- ggplot(df.i.narm, aes(x = tail_cm_classe, fill = mature)) +
geom_bar() +
scale_x_discrete(drop=FALSE) +
scale_fill_manual(values = c("non" = "orange", "oui" = "lightblue")) +
labs(title = paste0(unique(df.i$nom_scien), " (N = ", nrow(df.i.narm), ", ", years., ")"),
x = "Taille (cm)",
y = "Nombre d'individus",
fill = "Mature") +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) +
scale_y_continuous(expand = c(0,0))
barplot.i <- barplot.i + ggtitle(bquote(italic(.(unique(df.i$nom_scien)))~.(years.)~"(N ="~.(nrow(df.i.narm))*")"))
print(barplot.i)
ggsave(paste0("Figs/Sc_nb_sp/", unique(na.omit(df.i$nom_scien)), "_", years.,"_barplot.png"), barplot.i, width = 5, height = 4)
}
}
size.sp.(df.fsh. = df.fsh.red, df. = df_sum, years. = "2020-2023")
size.sp.(df.fsh. = df.fsh.red, df. = df_sum, years. = "2020-2023")
size.sp.(df.fsh. = df.fsh.red.1, df. = df_sum.1, years. = "2020-2022")
size.sp.(df.fsh. = df.fsh.red.2, df. = df_sum.2, years. = "2023")
rm(list=setdiff(ls(), c("fishing", "fishing.PNMCA", "fishing.Stareso", "Meta.survey", "survey", "%notin%", "df.msa", "df.mod", "df.mod.short", "multinom_model.short.red", "df.mod.large", "multinom_model.large.red", "results_df", "results_df.1", "results_df.2")))
df. <- fishing[, c("a", "mod_peche", "nom_scien", "CPUE")]
unique(df.$a)
table(df.$a)
unique(df.$mod_peche)
table(df.$mod_peche)
ggplot(filter(df., a %in% c("2020", "2021", "2022", "2023")), aes(x = mod_peche, y = CPUE, fill = mod_peche)) +
stat_boxplot(geom = "errorbar",
width = 0.25) +
geom_boxplot()
table(df.$mod_peche)
df.$mod_peche <- ifelse(df.$mod_peche == "csm", "chasse sous-marine", df.$mod_peche)
df.$mod_peche <- ifelse(df.$mod_peche == "pdb", "peche du bord", df.$mod_peche)
df.$mod_peche <- ifelse(df.$mod_peche == "pe", "peche embarquée", df.$mod_peche)
df.$mod_peche <- ifelse(df.$mod_peche == "po", "peche à l'oursin", df.$mod_peche)
table(df.$mod_peche)
df.$mod_peche <- as.factor(df.$mod_peche)
df.$mod_peche <- factor(df.$mod_peche, levels = c("chasse sous-marine", "peche du bord", "peche embarquée", "peche à l'oursin"))
table(df.$mod_peche)
df. %>% filter(a %in% c("2020","2021","2022", "2023")) -> data.1
ggplot(filter(data.1, mod_peche != "peche à l'oursin"), aes(x=mod_peche, y=CPUE)) +
geom_boxplot() +
xlab("mode de peche") +
ylab("CPUE (poids (g) / 1.5 / nb pêcheurs)") +
ggtitle("2020-2023") +
ylim(0,max(data.1$CPUE, na.rm = T)*1.1) +
scale_x_discrete(drop=FALSE) +
scale_fill_manual(drop=FALSE) +
geom_point(data = filter(data.1, mod_peche == "peche à l'oursin"),
mapping = aes(x = mod_peche, y = CPUE)) +
stat_summary(fun.y=mean, geom="point", shape=20, size=5, color="red", fill="red") +
geom_point(data = filter(data.1, mod_peche == "peche à l'oursin"),
mapping = aes(x = mod_peche, y = mean(unclass((filter(data.1, mod_peche == "peche à l'oursin")["CPUE"]))$CPUE)), shape=20, size=5, color="red", fill="red") +
scale_y_cut(breaks = c(750), which=c(1), scales=c(0.5))
ggsave("Figs/CPUE/CPUE_2020-2023.png", width = 5, height = 4)
df. %>% filter(a %in% c("2020","2021","2022")) -> data.2
ggplot(filter(data.2, mod_peche != "peche à l'oursin"), aes(x=mod_peche, y=CPUE)) +
geom_boxplot() +
xlab("mode de peche") +
ylab("CPUE (poids (g) / 1.5 / nb pêcheurs)") +
ggtitle("2020-2022") +
ylim(0,max(data.2$CPUE, na.rm = T)*1.1) +
scale_x_discrete(drop=FALSE) +
scale_fill_manual(drop=FALSE) +
geom_point(data = filter(data.2, mod_peche == "peche à l'oursin"),
mapping = aes(x = mod_peche, y = CPUE)) +
stat_summary(fun.y=mean, geom="point", shape=20, size=5, color="red", fill="red") +
geom_point(data = filter(data.2, mod_peche == "peche à l'oursin"),
mapping = aes(x = mod_peche, y = mean(unclass((filter(data.2, mod_peche == "peche à l'oursin")["CPUE"]))$CPUE)), shape=20, size=5, color="red", fill="red") +
scale_y_cut(breaks = c(750), which=c(1), scales=c(0.5))
ggsave("Figs/CPUE/CPUE_2020-2022.png", width = 5, height = 4)
df. %>% filter(a %in% c("2023")) -> data.3
ggplot(filter(data.3, mod_peche != "peche à l'oursin"), aes(x=mod_peche, y=CPUE)) +
geom_boxplot() +
xlab("mode de peche") +
ylab("CPUE (poids (g) / 1.5 / nb pêcheurs)") +
ggtitle("2023") +
ylim(0,max(data.3$CPUE, na.rm = T)*1.1) +
scale_x_discrete(drop=FALSE) +
scale_fill_manual(drop=FALSE) +
geom_point(data = filter(data.3, mod_peche == "peche à l'oursin"),
mapping = aes(x = mod_peche, y = CPUE)) +
stat_summary(fun.y=mean, geom="point", shape=20, size=5, color="red", fill="red") +
geom_point(data = filter(data.3, mod_peche == "peche à l'oursin"),
mapping = aes(x = mod_peche, y = mean(unclass((filter(data.3, mod_peche == "peche à l'oursin")["CPUE"]))$CPUE)), shape=20, size=5, color="red", fill="red") +
scale_y_cut(breaks = c(750), which=c(1), scales=c(0.5))
ggsave("Figs/CPUE/CPUE_2023.png", width = 5, height = 4)
rm(list=setdiff(ls(), c("fishing", "fishing.PNMCA", "fishing.Stareso", "Meta.survey", "survey", "%notin%", "df.msa", "df.mod", "df.mod.short", "multinom_model.short.red", "df.mod.large", "multinom_model.large.red", "results_df", "results_df.1", "results_df.2")))
